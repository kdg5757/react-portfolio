env:
  browser: true
  es2021: true
  node: true
extends:
  - eslint:recommended
  - plugin:react/recommended
  - plugin:@typescript-eslint/recommended
overrides: []
parser: '@typescript-eslint/parser'
parserOptions:
  ecmaVersion: latest
  sourceType: module
plugins:
  - react
  - '@typescript-eslint'
  - 'react-hooks'
ignores: [
  "!node_modules/",           // unignore `node_modules/` directory
  "node_modules/*",           // ignore its content
  "!node_modules/mylibrary/"  // unignore `node_modules/mylibrary` directory
]
rules:
  no-constant-binary-expression: error
  no-constructor-return: error
  no-duplicate-imports: error
  no-irregular-whitespace: ["error", { "skipComments": true, "skipRegExps": true, "skipJSXText": true }]
  no-self-compare: error
  no-template-curly-in-string: error
  no-unreachable-loop: error
  no-use-before-define: error
  require-atomic-updates: error
  block-scoped-var: error
  complexity: [ "error", 16 ]
  default-case-last: error
  default-param-last: error
  eqeqeq: error
  max-depth: ["error", 4]
  max-lines-per-function: ["error", 16]
  no-else-return: error
  no-empty-function: error
  no-empty-static-block: error
  no-eq-null: error
  no-floating-decimal: error
  no-invalid-this: error
  no-label-var: error
  no-lone-blocks: error
  no-lonely-if: error
  no-loop-func: error
  no-magic-numbers: error
  no-mixed-operators: error
  no-multi-assign: error
  no-nested-ternary: error
  brace-style: error
  func-call-spacing: error
  function-call-argument-newline: error
  function-paren-newline: ["error", "always"]
  jsx-quotes: ["error", "prefer-double"]
  key-spacing: ["error", { "beforeColon": false, "afterColon": true }]
  lines-between-class-members: ["error", "always"]
  no-whitespace-before-property: error
  semi-spacing: error
  semi-style: ["error", "last"]
  react-hooks/rules-of-hooks: error
  react-hooks/exhaustive-deps: warn
